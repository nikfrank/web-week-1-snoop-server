{"version":3,"sources":["goldRecord.png","emailRegex.js","snoopAlbums.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","emailRegex","snoopAlbums","name","year","cover","checkEmail","email","test","App","state","modalOpen","rapName","isEmailValid","albumSales","topAlbum","albumMenuOpen","startDate","setRapName","event","_this","setState","target","value","setEmail","setAlbumSales","Math","max","Number","toggleModal","toggleAlbumMenu","selectAlbum","album","setStartDate","date","done","console","log","fetch","method","mode","headers","Content-Type","body","JSON","stringify","getTime","then","response","text","responseText","_this2","this","_this$state","react_default","a","createElement","className","onChange","length","type","step","filter","x","map","n","key","src","goldRecord","onClick","Fragment","alt","es","selected","viewBox","cx","cy","r","d","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f55c6912.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/goldRecord.6a2018c3.png\";","// eslint-disable-next-line\nexport default /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n//export default /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n","export default [\n  { name: 'Doggystyle', year: 1993, cover: 'https://upload.wikimedia.org/wikipedia/en/6/63/SnoopDoggyDoggDoggystyle.jpg' },\n  { name: 'Tha Doggfather', year: 1996, cover: 'https://upload.wikimedia.org/wikipedia/en/a/a3/Tha-doggfather.jpg' },\n  { name: 'Da Game is to Be Sold, Not to Be Told', year: 1998, cover: 'https://upload.wikimedia.org/wikipedia/en/c/c5/Gameistobesold.jpg' },\n  { name: 'No Limit Top Dogg', year: 1999, cover: 'https://upload.wikimedia.org/wikipedia/en/d/d1/Snoop_front.JPG' },\n  { name: 'Tha Last Meal', year: 2000, cover: 'https://upload.wikimedia.org/wikipedia/en/d/dc/The_Last_Meal_-_Front.jpeg' },\n];\n","import React from 'react';\nimport './App.css';\nimport emailRegex from './emailRegex';\nimport goldRecord from './goldRecord.png';\n\nimport snoopAlbums from './snoopAlbums';\n\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst checkEmail = (email)=> emailRegex.test(email);\n\n\nclass App extends React.Component {\n\n  state = {\n    modalOpen: false,\n    rapName: '',\n    email: '',\n    isEmailValid: false,\n    albumSales: 1000,\n    topAlbum: null,\n    albumMenuOpen: false,\n    startDate: null,\n  }\n\n  setRapName = (event)=> {\n    this.setState({\n      rapName: event.target.value,\n    })\n  }\n\n  setEmail = (event)=> {\n    this.setState({\n      email: event.target.value,\n      isEmailValid: checkEmail(event.target.value),\n    })\n  }\n\n  setAlbumSales = (event) => {\n    this.setState({\n      albumSales: Math.max(0, Number(event.target.value)),\n    })\n  }\n\n  toggleModal = ()=>\n    this.setState({\n      modalOpen: !this.state.modalOpen,\n    })\n\n  toggleAlbumMenu = ()=>\n    this.setState({\n      albumMenuOpen: !this.state.albumMenuOpen,\n    })\n\n  selectAlbum = (album)=> this.setState({ topAlbum: album, albumMenuOpen: false })\n\n  setStartDate = (date)=> this.setState({ startDate: date })\n\n  done = (event)=> {\n    this.toggleModal();\n    console.log('done applying, it\\'s friday, now I got nothin to do');\n\n    fetch('/submit', {\n      method: 'POST',\n      mode: 'cors',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        rapName: this.state.rapName,\n        email: this.state.email,\n        albumSales: this.state.albumSales,\n        topAlbum: this.state.topAlbum,\n        startDate: this.state.startDate.getTime(),\n      }),\n    }).then(response => response.text())\n      .then(responseText => console.log(responseText));\n  }\n\n  render(){\n    const { rapName, email } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className='form'>\n          <div className='card swanky-input-container'>\n            <label>\n              <input value={rapName} onChange={this.setRapName} />\n              <span className='title'>Rap Name</span>\n            </label>\n          </div>\n\n          <div className='card swanky-input-container'>\n            <label>\n              <input value={email} onChange={this.setEmail} />\n              <span className='title'>Email</span>\n              {\n                (this.state.isEmailValid || this.state.email.length < 1) ? (null) : (\n                  <span className='email-invalid'>Please enter a valid email</span>\n                )\n              }\n            </label>\n          </div>\n\n          <div className='card swanky-input-container'>\n            <label>\n              <input type='number' step={100000}\n                     value={this.state.albumSales} onChange={this.setAlbumSales} />\n              <span className='title'>Album Sales</span>\n            </label>\n            <div className='goldRecords'>\n            {\n              [1,2,3,4,5,6]\n              .filter(x => x*1000000 < this.state.albumSales)\n              .map(n=> (\n                <div className='goldRecord' key={n}>\n                  <img src={goldRecord}/>\n                </div>\n              ))\n            }\n            </div>\n          </div>\n\n          <div className='card swanky-input-container'>\n            <span className='title'>Top Album</span>\n            <div className='album-dropdown-base' onClick={this.toggleAlbumMenu}>\n              {this.state.topAlbum === null ? (\n                <span>Select the best Snoop Album</span>\n              ) : (\n                <>\n                 <img src={this.state.topAlbum.cover}\n                      alt={this.state.topAlbum.name}/>\n                 <span>{this.state.topAlbum.year}</span>\n                 <span>{this.state.topAlbum.name}</span>\n               </>\n              )}\n              <span className='dropdown-arrow'>\n                    {this.state.albumMenuOpen ? '▲' : '▼'}\n              </span>\n            </div>\n            {\n              this.state.albumMenuOpen ? (\n                <ul className='album-menu'>\n                  {\n                    snoopAlbums.map((album)=>(\n                      <li key={album.name}\n                          onClick={()=> this.selectAlbum(album)}>\n                        <img src={album.cover}/>\n                        <span>{album.year}</span>\n                        <span>{album.name}</span>\n                      </li>\n                    ))\n                  }\n                </ul>\n              ) : null\n            }\n          </div>\n\n          <div className='card swanky-input-container'>\n            <label>\n              <DatePicker selected={this.state.startDate}\n                          onChange={this.setStartDate} />\n              <span className='title'>Start Date</span>\n            </label>\n          </div>\n\n\n          <div className='done-container'>\n            <button className='done-button' onClick={this.toggleModal}>Done</button>\n          </div>\n        </div>\n\n        <div className={this.state.modalOpen ? 'modal-open' : 'modal-closed'}>\n          <h2>Confirmation</h2>\n          <p>are you sure you are ready with your application?</p>\n          <button onClick={this.done}>Confirm!</button>\n          <svg viewBox='0 0 100 100' className='x-button'\n               onClick={this.toggleModal}>\n            <circle cx={50} cy={50} r={47}/>\n            <path d='M 30 30 L 70 70'/>\n            <path d='M 70 30 L 30 70'/>\n          </svg>\n        </div>\n        {this.state.modalOpen ? (\n          <div className='modal-shade' onClick={this.toggleModal}/>\n        ) : null}\n      </div>\n    );\n  }\n}\n\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}